<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 引入外部jdbc.properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 配置连接池的信息 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<!-- 数据库连接的四个基本参数 -->
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 配置Hibernate的相关属性 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Hibernate的其他的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- Hibernate的方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
		<!-- 配置映射文件 -->
		<property name="mappingResources">
			<list>
			    <value>com/ssh/shop/user/User.hbm.xml</value>
			    <value>com/ssh/shop/category/Category.hbm.xml</value>
			    <value>com/ssh/shop/product/Product.hbm.xml</value>
			 <!--    <value>com/ssh/shop/categorysecond/CategorySecond.hbm.xml</value> -->
		
			</list>
		</property>
		<!-- 配置映射文件 -->
		<!-- <property name="mappingResources">
			<list>
				<value>cn/itcast/shop/user/User.hbm.xml</value>
			</list>
		</property> -->
		
	</bean>
	
	
	<!-- 声明式事务管理 -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 注入 sessionFactory-->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置action -->
	<!-- 将类交给spring管理，scope配置成多例模式，线程安全,由于struts2中的class与这里的id值大小写不对应，使编程过程中出现了错误-->
	<bean id="indexAction" class="com.ssh.shop.index.IndexAction" scope="prototype">
		<property name="categoryService" ref="categoryService"/>
		<property name="productService" ref="productService"/>
	</bean>
	
	<bean id="userAction" class="com.ssh.shop.user.UserAction" scope="prototype">
			<property name="userService" ref="userService"></property>
	</bean>
	
	<!-- 配置service -->
	<bean id="userService" class="com.ssh.shop.user.UserService">
		<property name="userDao" ref="userDao" />
	</bean>
	<bean id="categoryService" class="com.ssh.shop.category.CategoryService">
	    <property name="categoryDao" ref="categoryDao"></property>
	</bean>
	<bean id="productService" class="com.ssh.shop.product.ProductService">
		<!-- <property name="categoryService" ref="categoryService"/> -->
		<property name="productDao" ref="productDao"></property>
	</bean>
	
	
	
	<!-- 配置Dao,自动加载hibernate模板，继承了hibernateDaoSupport，里面有sessionFactory的set方法 -->
	<bean id="userDao" class="com.ssh.shop.user.UserDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="categoryDao" class="com.ssh.shop.category.CategoryDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="productDao" class="com.ssh.shop.product.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	
	<!-- 配置验证码 -->
	<bean id="checkImg" class="com.ssh.shop.user.CheckImgAction" scope="prototype" ></bean>
	
	<!-- 配置商品 -->
	<!-- <bean id="productAction" class="com.ssh.shop.product.ProductAction" scope="prototype">
			<property name="productService" ref="productService"/>
	        <property name="categoryService" ref="categoryService"/>
	</bean> -->
	
</beans>